services:
  inventory-db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      inventory_backend:
        aliases:
          - "database"

  inventory-configuration:
    image: docker.io/library/inventory-configuration:0.0.1-SNAPSHOT
    ports:
      - "${CS_PORT:-8071}:${CS_PORT:-8071}"
    environment:
      SERVER_PORT: ${CS_PORT:-8071}
      ENCRYPT_KEY: FH2xdsHeap36Ax9qfJAk4WIlHNPrgvb2HAe1gwwhSFPOogBCMQOWjGjLdhVaXZEM
    networks:
      inventory_backend:
        aliases:
          - "configuration"

  inventory-service:
    image: docker.io/library/inventory-service:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configuration:${CS_PORT:-8071}"
      SPRING_PROFILES_ACTIVE: "dev"
      DATABASESERVER_PORT: "5432"
    depends_on:
      inventory-configuration:
        condition: service_started
      inventory-db:
        condition: service_healthy
    networks:
      - inventory_backend

networks:
  inventory_backend:
    driver: bridge
